name: Continuous Integration

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - cypress-on-CI

jobs:
  testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    container: complat/chemotion_eln_runner:main

    services:
      postgres:
        image: postgres    # https://hub.docker.com/_/postgres
        env:
          POSTGRES_PASSWORD: postgres    # env variable required by postgres Docker container
          POSTGRES_USER: chemotion    # optional env variable used in conjunction with POSTGRES_PASSWORD to set a user and their password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: create user for datacollectors testing
        run: |
          useradd testuser -m -s /bin/bash
          mkdir /home/testuser/.ssh
          chown testuser:testuser /home/testuser/.ssh
          chmod 700 /home/testuser/.ssh

      - name: configure ssh for datacollectors testing 
        run: |
          service ssh restart
          mkdir -p $HOME/.ssh
          chmod 700 $HOME/.ssh
          ssh-keygen -t ed25519 -f $HOME/.ssh/id_test -N ""
          # echo "$(<$HOME/.ssh/id_test.pub)" >> $HOME/.ssh/authorized_keys
          echo "$(<$HOME/.ssh/id_test.pub)" | sudo tee -a /home/testuser/.ssh/authorized_keys
          eval `ssh-agent`
          ssh-add $HOME/.ssh/id_test
          ssh-keyscan -H 127.0.0.1  >> $HOME/.ssh/known_hosts

      - name: configure repository
        run: |
          mv public/welcome-message-sample.md public/welcome-message.md
          cd config
          cp database.yml.gitlab database.yml
          cp -f datacollectors.yml.example datacollectors.yml
          cp -f profile_default.yml.example profile_default.yml
          cp -f shrine.yml.example shrine.yml
          cp -f storage.yml.example storage.yml
          cp -f radar.yml.example radar.yml
          touch klasses.json
          bundle config set without ''

      - name: configure postgres
        env:
          PG_ROLE: chemotion_test
          PG_ROLE_PASSWORD: 123456
          PG_DATABASE: chemotion_test
          PGPASSWORD: postgres    # env variable required by psql client
        run: |    # host is service container name
            psql -h postgres -U chemotion -c "CREATE ROLE $PG_ROLE LOGIN CREATEDB NOSUPERUSER PASSWORD '$PG_ROLE_PASSWORD';"
            psql -h postgres -U chemotion -c "CREATE DATABASE $PG_DATABASE OWNER $PG_ROLE;"
            psql -d postgresql://$PG_ROLE:$PG_ROLE_PASSWORD@postgres/$PG_DATABASE -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore"; CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'

      - name: bundle install
        run: bundle install

      - name: yarn install
        run:  yarn install --production=false

      - name: start background server
        run: bundle exec rails s -p 3000 -b 0.0.0.0

      - name: run Cypress tests # wait on server? (https://til.simonwillison.net/bash/start-test-then-stop-server)
        run: yarn cypress run --config-file cypress.config.js

#      - name: precompile
#        run: RAILS_ENV=test bundle exec rake webpacker:compile

#      - name: rspec acceptance
#        continue-on-error: true    # don't fail job because this step; TODO: fix flaky acceptance tests...
#        run: RAILS_ENV=test bundle exec rspec spec/features

name: Continuous Integration

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - development-5

jobs:
  linting:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      statuses: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: RuboCop with Pronto
        uses: HeRoMo/pronto-action@v1.37.0
        with:
          runner: rubocop
          formatters: github_status github_pr_review

  testing:
    needs: linting
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    container: jancbrammer/chemotion-ci-runner:debian    # TODO: serve image from complat account

    services:
      postgres:
        image: postgres    # https://hub.docker.com/_/postgres
        env:
          POSTGRES_PASSWORD: postgres    # env variable required by postgres Docker container
          POSTGRES_USER: chemotion    # optional env variable used in conjunction with POSTGRES_PASSWORD to set a user and their password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: configure repository
        run: |
          mv public/welcome-message-sample.md public/welcome-message.md
          cd config
          cp database.yml.gitlab database.yml
          cp -f storage.yml.example storage.yml
          touch datacollectors.yml
          cp -f profile_default.yml.example profile_default.yml
          touch klasses.json

      - name: configure postgres
        env:
          PG_ROLE: chemotion_test
          PG_ROLE_PASSWORD: 123456
          PG_DATABASE: chemotion_test
          PGPASSWORD: postgres    # env variable required by psql client
        run: |    # host is service container name
            psql -h postgres -U chemotion -c "CREATE ROLE $PG_ROLE LOGIN CREATEDB NOSUPERUSER PASSWORD '$PG_ROLE_PASSWORD';"
            psql -h postgres -U chemotion -c "CREATE DATABASE $PG_DATABASE OWNER $PG_ROLE;"
            psql -d postgresql://$PG_ROLE:$PG_ROLE_PASSWORD@postgres/$PG_DATABASE -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore"; CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'

      - name: bundle install
        run: bundle install

      - name: yarn install
        run: yarn install

      - name: prepare postgres
        run: |
          RAILS_ENV=test bundle exec rake db:migrate
          RAILS_ENV=test bundle exec rake db:test:prepare
          RAILS_ENV=test bundle exec rake db:seed

      - name: precompile
        run: RAILS_ENV=test bundle exec rake webpacker:compile

      - name: npm test
        run: npm test

      - name: rspec acceptance
        continue-on-error: true    # don't fail job because this step; TODO: fix flaky acceptance tests...
        run: RAILS_ENV=test bundle exec rspec spec/features

      - name: rspec unit
        run: RAILS_ENV=test bundle exec rspec --exclude-pattern spec/{features}/**/*_spec.rb

      - name: coverage rspec unit
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: coverage/lcov/${{ github.event.repository.name }}.lcov
          minimum-coverage: 50
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}

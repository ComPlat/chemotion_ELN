name: Ruby Unit Tests

on: [workflow_dispatch, push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  docker_container:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pg_role: [chemotion_test]
        pg_database: [chemotion_test]
        pg_password: [123456]
    container: complat/complat-ubuntu-runner:development-5.0b920674f8
    env:
      HOME: /home/gitlab-runner

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: git clone + postgres    # split into separate steps?
        working-directory: /home/gitlab-runner
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        run: |
            branch=${GITHUB_REF##*/}
            if [[ $GITHUB_EVENT_NAME == pull_request ]]; then
              branch=$GITHUB_HEAD_REF  # GITHUB_HEAD_REF is only set for PR events
            fi
            sudo git clone --branch $branch --depth 1 https://github.com/$(echo $GITHUB_REPOSITORY).git    # replace with actions/checkout/@v3?

            sudo bash ./chemotion_ELN/.github/workflows/config.sh

            echo "POSTGRES"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE ROLE ${{ matrix.pg_role }} LOGIN CREATEDB NOSUPERUSER PASSWORD '${{ matrix.pg_password }}'"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE DATABASE ${{ matrix.pg_database }} OWNER ${{ matrix.pg_role }};"
            psql -d postgresql://${{ matrix.pg_role }}:${{ matrix.pg_password }}@postgres/${{ matrix.pg_database }} -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore"; CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'

            sudo chmod -R +x chemotion_ELN/spec
            sudo chown -R gitlab-runner:gitlab-runner chemotion_ELN

      - name: bundle + yarn install
        working-directory: /home/gitlab-runner/chemotion_ELN
        run: |
            /bin/bash -l -c "source /home/gitlab-runner/.asdf/asdf.sh && bundle install"
            /bin/bash -l -c "source /home/gitlab-runner/.asdf/asdf.sh && yarn install"

      - name: db
        working-directory: /home/gitlab-runner/chemotion_ELN
        run: |
            /bin/bash -l -c "RAILS_ENV=test bundle exec bin/rails db:migrate db:test:prepare  > /dev/null"
            /bin/bash -l -c "RAILS_ENV=test bundle exec bin/rails db:seed > /dev/null"

      - name: rb test
        working-directory: /home/gitlab-runner/chemotion_ELN
        run: |
          /bin/bash -l -c "RAILS_ENV=test bundle exec rspec --exclude-pattern spec/{features}/**/*_spec.rb"

      - name: upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: /home/gitlab-runner/chemotion_ELN/coverage/lcov/chemotion_ELN.lcov

  coverage_report:
    needs: docker_container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout/@v3  # we need to have the repository checked out in order to generate HTML report
    - name: download coverage
      uses: actions/download-artifact@v3
      with:
        name: coverage
    - name: post coverage
      uses: zgosalvez/github-actions-report-lcov@v1
      with:
        coverage-files: chemotion_ELN.lcov
        minimum-coverage: 50
        artifact-name: code-coverage-report
        github-token: ${{ secrets.GITHUB_TOKEN }}

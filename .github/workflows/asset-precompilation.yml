name: test assets precompilation

on:
  workflow_dispatch:

jobs:
  testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    container: complat/chemotion_eln_runner:main-v2.0.0-16-gd3380de59a

    services:
      postgres:
        image: postgres:16    # https://hub.docker.com/_/postgres
        env:
          POSTGRES_PASSWORD: postgres    # env variable required by postgres Docker container
          POSTGRES_USER: chemotion    # optional env variable used in conjunction with POSTGRES_PASSWORD to set a user and their password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: production

    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: configure repository
        run: |
          cd config
          cp database.yml.ci database.yml
          cp -f profile_default.yml.example profile_default.yml
          cp -f shrine.yml.example shrine.yml
          cp -f storage.yml.example storage.yml
          touch klasses.json
          bundle config set without ''

      - name: bundle install
        run: |
          bundle install
          echo "SECRET_KEY_BASE=$(bundle exec rake secret)" > .env

      - name: yarn install
        run:  ./prepare-nodejs.sh && ./prepare-nodejspkg.sh

      # @todo user AR nulladapter (DISABLE_DATABASE_ENVIRONMENT_CHECK) instead of setting up a real db
      - name: prepare postgres
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate

      - name: precompile
        run: |
          bundle exec rake assets:precompile

      - name: list browsers targets
        run: yarn browserslist

      - name: update-browserslist-db@latest
        run: |
          yarn add update-browserslist-db@latest
          yarn update-browserslist-db


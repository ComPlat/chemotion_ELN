name: Development 5.1

on:
  push:
    branches: [ github-actions ]

  workflow_dispatch:

jobs:

  docker_container:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bundler: [1.17.3]
        ruby: [2.6.6]
        node: [14.16.0]
    container: 
      image: complat/complat-ubuntu-runner:development-5.1
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - name: git clone + postgres
        working-directory: /home/gitlab-runner
        # TODO rm?
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_DB: chemotion_test
          POSTGRES_USER: chemotion_test
          POSTGRES_PASSWORD: 123456
        run: |
            whoami
            # owner was root before
            # TODO very slow
            #sudo chown -R gitlab-runner:gitlab-runner shared
            # TODO!
            sudo chown -R gitlab-runner:gitlab-runner /github/home

            sudo git clone --branch development-5 --depth 1 https://github.com/ComPlat/chemotion_ELN.git 

            # TODO
            # set env variabes for versions
            cd chemotion_ELN
            export NVM_VERSION="${NVM_VERSION}:$(cat .nvmrc)"
            #sudo echo "NVM_VERSION=$(sudo cat .nvmrc)" >> $GITHUB_ENV

            cd config
            sudo cp database.yml.gitlab database.yml
            sudo cp -f storage.yml.example storage.yml
            sudo touch datacollectors.yml
            sudo cp -f profile_default.yml.example profile_default.yml
            sudo touch klasses.json

            echo "POSTGRES"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "\du"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE ROLE chemotion_test LOGIN CREATEDB SUPERUSER PASSWORD '123456'"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE DATABASE chemotion_test OWNER chemotion_test;"
            psql -d postgresql://chemotion_test:123456@postgres/chemotion_test -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore"; CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
            psql -d postgresql://chemotion_test:123456@postgres/chemotion_test -c "\du"

            cd ..
            # TODO rm?
            sudo chmod -R +x spec

            cd ..
            sudo chown -R gitlab-runner:gitlab-runner chemotion_ELN
            echo "PER"
            ls -la

      # - name: bundle + node install
      #   working-directory: /home/gitlab-runner/chemotion_ELN
      #   run: |
      #       # echo "LS"
      #       # cd ..
      #       # ls -la
      #       # TODO
      #       #/bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && gem install bundler -v 1.17.3 --no-document && bundle install -j 3 --path ../shared/bundle"
      #       # echo "NODES"
      #       # cd /home/gitlab-runner/.nvm/versions/node
      #       # ls -la
      #       # echo "NPM INSTALL"
      #       #sudo rm -rf /home/gitlab-runner/.nvm/versions/node/v12.22.1
      #       # echo "CHECK RM NPM"
      #       # /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && npm -v"
      #       # /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && which npm"
      #       # Rails 5:
      #       /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use && npm install yarn -g"
      #       /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use && yarn install"
      #       # Rails 4:
      #       #/bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use 14.16.0 && npm install -g npm@7.11.1"
      #       #/bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && npm i"
      #       # echo "NPM -V"
      #       # /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && npm -v"
      #       #/bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && npm list"  

      - name: log
        working-directory: /home/gitlab-runner/chemotion_ELN
        run: |
            echo "${{ env.NVM_VERSION }}"
      #       echo "RVM"
      #       /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && rvm list"
      #       echo "CONFIG"
      #       cd config
      #       ls -la
      #       # echo "RAILS"
      #       # sudo which rails
      #       # sudo rails -v
      #       # cd ../..
      #       # pwd
      #       # ls -la
      #       # cd ..
      #       # pwd
      #       # ls -la
      #       # echo "/github/home"
      #       # cd /github/home
      #       # ls -la
      #       # /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && bundle info openbabel"
      #       # /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && bundle env"

      # Rails 5: error
      # Rails 4: passing
      # - name: npm test
      #   working-directory: /home/gitlab-runner/chemotion_ELN
      #   run: |
      #       echo "RAKE DB"
      #       /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && source /home/gitlab-runner/.nvm/nvm.sh && nvm use && RAILS_ENV=test bundle exec rake db:test:prepare"
      #       echo "NPM TEST"
      #       /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use && npm test"

      # - name: acc test
      #   working-directory: /home/gitlab-runner/chemotion_ELN
      #   run: |
      #       # Rails 5:
      #       /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:test:prepare && bundle exec rake assets:precompile && bundle exec rspec spec/features"
      #       # Rails 4:
      #       #/bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:test:prepare && bundle exec rspec spec/features"

      # - name: ruby test
      #   working-directory: /home/gitlab-runner/chemotion_ELN
      #   run: |
      #       /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:schema:load && bundle exec rspec --exclude-pattern spec/{features}/**/*_spec.rb"
      #       # /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && RAILS_ENV=test bundle exec rake db:schema:load && bundle exec rspec spec/models/#collections_sample_spec.rb"



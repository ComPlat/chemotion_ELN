FROM ptrxyz/chemotion:eln-2.0.1

ARG REMOTE=https://github.com/ComPlat/chemotion_ELN.git
ARG BUNDLER_VERSION=2.4.22
# The last version of bundler to support current Ruby & RubyGems was 2.4.22.

SHELL ["/bin/bash", "-e", "-o", "pipefail", "-c", "--"]

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked,id=apt-cache \
    --mount=type=cache,target=/var/lib/apt,sharing=locked,id=apt-lib \
    apt-get update -y && \
    apt-get install -y --no-install-recommends --autoremove --fix-missing \
    git ca-certificates curl unzip nano \
    build-essential \
    zlib1g-dev libreadline-dev patchelf \
    cmake libpq-dev swig libmagickcore-dev \
    postgresql-client inkscape imagemagick librsvg2-bin locales ghostscript \
    vim iproute2 sudo make jq tmate

WORKDIR /chemotion/app

RUN cp .version /bk.version

COPY ./.git/HEAD .current_branch

RUN git remote add origin ${REMOTE} && \
    git fetch && \
    git checkout $(cat .current_branch | cut -d'/' -f3)

RUN rm .current_branch

RUN mv /bk.version .version

RUN echo "For this deployed container" && \
    echo "CHEMOTION_REF=$(git rev-parse --short HEAD || echo unknown)" >> /chemotion/app/.version && \
    echo "CHEMOTION_TAG=$(git describe --abbrev=0 --tags || echo untagged)" >> /chemotion/app/.version

RUN rm ${ASDF_DIR}/asdf
ENV PATH="${ASDF_DIR}/bin:${PATH}"
RUN ./prepare-asdf.sh

RUN rm -rf /asdf/installs/ruby/2.7.8/lib/ruby/gems/2.7.0/gems/bundler-* && \
    rm -f /asdf/installs/ruby/**/lib/ruby/gems/**/specifications/default/bundler-*.gemspec

# Ruby
RUN --mount=type=cache,target=/asdf/cache,sharing=locked \
    MAKEFLAGS="-j$(nproc)" && export MAKEFLAGS && \
    # asdf plugin add ruby && \
    # asdf install ruby "${RUBY_VERSION}" && \
    gem install bundler -v "${BUNDLER_VERSION}" && \
    bundle add --skip-install 'factory_bot' && \
    bundle install --jobs="$(nproc)" --retry=3 && \
    bundle clean --force

ENV ASDF_NODEJS_VERSION=''
ENV ASDF_RUBY_VERSION=''
RUN ./prepare-nodejs.sh
RUN asdf current && sleep 5s

RUN --mount=type=cache,target=/asdf/cache,sharing=locked \
    echo -e "--modules-folder ${NODE_PATH}\n--ignore-engines" > /chemotion/app/.yarnrc && \
    MAKEFLAGS="-j$(nproc)" && export MAKEFLAGS && \
    npm install -g yarn && \
    yarn install --modules-folder ${NODE_PATH} --ignore-engines --ignore-scripts 2>&1 | grep -v ^warning

RUN bash package_postinstall.sh

RUN MAKEFLAGS="-j$(nproc)" && export MAKEFLAGS && \
    bundle install --jobs="$(nproc)" --retry=3

ADD https://raw.githubusercontent.com/harivyasi/push2deploy/main/payload/run.sh /embed/run.sh
ADD https://raw.githubusercontent.com/harivyasi/push2deploy/main/payload/health.sh /embed/health.sh
ADD https://raw.githubusercontent.com/harivyasi/push2deploy/main/payload/initialize.sh /initialize.sh

RUN chmod +x /embed/run.sh && \
    chmod +x /embed/health.sh && \
    chmod +x /initialize.sh

EXPOSE 4000

WORKDIR /chemotion/app

CMD ["/embed/run.sh"]

HEALTHCHECK --interval=30s --timeout=10s --start-period=300s --retries=3 \
    CMD /embed/health.sh || exit 1

VOLUME [ "/chemotion/app", "/chemotion/data" ]